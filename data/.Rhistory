learning 2014 <- read.table(" http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
learning2014 <- read.table(" http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(learning2014)
dim(learning2014)
# 3)
library(dplyr)
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
# 3)
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns <- select(learning2014, one_of(deep_questions))
?library
install.packages(dplyr)
install.packages("dplyr")
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
deep_columns <- select(lrn14, one_of(deep_questions))
library(dplyr)
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
learning2014$surf <- rowMeans(surface_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
str(learning2014)
dim(learning2014)
# We will create the initial vector containing our target dimensions.
learning2014analysis <- c("gender", "age", "attitude", "deep", "stra", "surf", "points")
learning2014analysis$deep <- rowMeans(deep_columns)
# We will create the initial vector containing our target columns
columns <- c("gender", "age", "attitude", "deep", "stra", "surf", "points")
?data.frame
# We will create the initial vector containing our target columns
rows <- c("gender", "age", "attitude", "deep", "stra", "surf", "points")
learning2014analysis <- data.frame(row.names = rows)
data.frame
learning2014
learning2014analysis
learning2014analysis$deep <- rowMeans(deep_columns)
# 2)
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(learning2014)
dim(learning2014)
# We will first install the package dplyr and access the library.
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
#Then we will create sum composite variables for deep-, surface- and strategic
#learning questions.
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#Then we will combine the analysis dataset out of desired components.
learning2014analysis <- data.frame(learning2014$gender, learning2014$age, learning2014$attitude, deep_columns, surface_columns, strategic_columns, learning2014$Points)
deep_columns <- select(learning2014, one_of(deep_questions))
surface_columns <- select(learning2014, one_of(surface_questions))
strategic_columns <- select(learning2014, one_of(strategic_questions))
#Then we will combine the analysis dataset out of desired components.
learning2014analysis <- data.frame(learning2014$gender, learning2014$age, learning2014$attitude, deep_columns, surface_columns, strategic_columns, learning2014$Points)
strategic_columns
strategic_columns <- rowMeans(strategic_columns)
strategic_columns
surface_columns <- rowMeans(surface_columns)
deep_columns <- rowMeans(deep_columns)
#Then we will combine the analysis dataset out of desired components.
learning2014analysis <- data.frame(learning2014$gender, learning2014$age, learning2014$attitude, deep_columns, surface_columns, strategic_columns, learning2014$Points)
str(learning2014)
dim(learning2014)
learning2014$gender
learning2014$age
learning2014$age
learning2014$Age
#Then we will combine the analysis dataset out of desired components.
learning2014analysis <- data.frame(learning2014$gender, learning2014$Age, learning2014$Attitude, deep_columns, surface_columns, strategic_columns, learning2014$Points)
#Now we will revisit the structure and dimensions of our learning2014 dataset,
#and find it contains the three added sum composite variables (63 altogether).
str(learning2014analysis)
dim(learning2014analysis)
# We will further exclude observations where the exam points variable is 0.
learning2014analysis <- filter(learning2014analysis, points > 0)
# We will further exclude observations where the exam points variable is 0.
learning2014analysis <- filter(learning2014analysis, Points > 0)
rownames <- c("gender", "age", "attitude", "deep", "stra", "surf", "points")
learning2014analysis(row.names(rownames))
# 2)
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(learning2014)
dim(learning2014)
# We will first install the package dplyr and access the library.
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
# Then we will create sum composite variables for deep-, surface- and strategic
# learning questions.
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(learning2014, one_of(deep_questions))
deep <- rowMeans(deep_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
stra <- rowMeans(strategic_columns)
# We will pick and name the desired vectors from the dataset
gender <- learning2014$gender
age <- learning2014$Age
attitude <- learning2014$Attitude
points <- learning2014$Points
gender
# Then we will combine the analysis dataset out of our desired components.
learning2014analysis <- data.frame(gender, age, attitude, deep, stra, surf, points)
# We will further exclude observations where the exam points variable is 0.
learning2014analysis <- filter(learning2014analysis, Points > 0)
# We will further exclude observations where the exam points variable is 0.
learning2014analysis <- filter(learning2014analysis, points > 0)
# Now we will revisit the structure and dimensions of our learning2014analysis
# dataset consisting of 7 rows and 166 observations.
str(learning2014analysis)
# 4)
?write.csv
# 4)
setwd("C:\Users\mkruskop\Documents\IODS\IODS-project\data")
# 4)
?setwd
setwd(C:\Users\mkruskop\Documents\IODS\IODS-project\)
# 4)
?setwd
# 4)
getwd()
setwd(\IODS\IODS-project\)
setwd(C:/Users/mkruskop/Documents/IODS/IODS-project/)
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/")
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
?write.csv
write.csv(learning2014analysis, file = "learning2014")
?read.csv
read.csv(learning2014)
read.csv("learning2014")
test <- read.csv("learning2014")
str(test)
dim(test)
# Now we will revisit the structure and dimensions of our learning2014analysis
# dataset consisting of 7 rows and 166 observations.
str(learning2014analysis)
dim(learning2014analysis)
# 4)
?write.csv
write.table(learning2014analysis, file = "learning2014")
test <- read.csv("learning2014")
str(test)
dim(test)
write.csv(learning2014analysis, file = "learning2014")
test <- read.csv("learning2014")
str(test)
dim(test)
write.csv(learning2014analysis, file = "learning2014", col.names = FALSE)
write.csv(learning2014analysis, file = "learning2014", row.names = FALSE)
test <- read.csv("learning2014")
str(test)
dim(test)
head(test)
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
learning2014 <- read.csv("learning2014")
str(learning2014)
dim(learning2014)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot")
library(ggplot2)
install.packages("GGally")
library(GGally)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
pointsmodel <- lm(points ~ deep + surf + stra, data = learning2014)
pointsmodel
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(pointsmodel)
p
pointsmodel <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(pointsmodel)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
summary(learning2014)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
install.packages("ggplot2")
library(ggplot2)
install.packages("GGally")
library(GGally)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
library(GGally)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("GGally")
install.packages("GGally")
library(GGally)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p
summary(learning2014)
summary(learning2014$attitude)
# 2)
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(learning2014)
dim(learning2014)
# We will first install the package dplyr and access the library.
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
# We will first install the package dplyr and access the library.
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
# Then we will create sum composite variables for deep-, surface- and strategic
# learning questions.
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(learning2014, one_of(deep_questions))
deep <- rowMeans(deep_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
stra <- rowMeans(strategic_columns)
# We will pick and name the desired vectors from the dataset
gender <- learning2014$gender
age <- learning2014$Age
attitude <- rowMeans(learning2014$Attitude)
attitude <- mean(learning2014$Attitude)
attitude <- learning2014$Attitude
points <- learning2014$Points
# Then we will combine the analysis dataset out of our desired components.
learning2014analysis <- data.frame(gender, age, attitude, deep, stra, surf, points)
# We will further exclude observations where the exam points variable is 0.
learning2014analysis <- filter(learning2014analysis, points > 0)
# Now we will revisit the structure and dimensions of our learning2014analysis
# dataset consisting of 7 rows and 166 observations.
str(learning2014analysis)
dim(learning2014analysis)
# 4) Tallennetaan tulos data-kansioon ja testataan tiedoston rakenne.
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
write.csv(learning2014analysis, file = "learning2014", row.names = FALSE)
test <- read.csv("learning2014")
str(test)
head(test)
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
learning2014 <- read.csv("learning2014")
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
learning2014 <- read.csv("learning2014")
str(learning2014)
dim(learning2014)
summary(learning2014$attitude)
summary(learning201)
summary(learning2014)
install.packages("ggplot2")
library(ggplot2)
install.packages("GGally")
library(GGally)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
summary(learning2014)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
ing2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap(
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
pointsmodel <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ deep + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(pointsmodel)
summary(learning2014)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
summary(learning2014)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
summary(learning2014)
pointsmodel <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ deep + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ gender + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ age + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude + surf + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ surf + stra + attitude, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude + deep, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude + deep + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude + stra, data = learning2014)
summary(pointsmodel)
pointsmodel <- lm(points ~ attitude, data = learning2014)
summary(pointsmodel)
par(mfrow = c(2,2))
plot(pointsmodel, which = c(1,2,5))
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
learning2014 <- read.csv("learning2014")
learning2014 <- read.csv("learning2014")
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
learning2014 <- read.csv("learning2014")
learning2014 <- read.table("learning2014")
setwd("C:/Users/mkruskop/Documents/IODS/IODS-project/data")
learning2014 <- read.table("learning2014")
# import learning2014 data
?source
# import learning2014 data
learning2014 <- read.csv("learning2014")
# load libraries
library(ggplot2)
library(GGally)
# import learning2014 data
learning2014 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep="\t", header=TRUE)
summary(learning2014)
# load libraries
library(ggplot2)
library(GGally)
# import learning2014 data
learning2014 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep=",", header=TRUE)
summary(learning2014)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
